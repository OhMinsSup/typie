import * as aws from '@pulumi/aws';
import * as pulumi from '@pulumi/pulumi';
import { buckets } from '$aws/s3';
import { configurationSet, emailIdentity } from '$aws/ses';

const team = new aws.iam.Group('team', {
  name: 'team',
});

new aws.iam.GroupPolicy('team', {
  group: team.name,
  name: 'team',
  policy: {
    Version: '2012-10-17',
    Statement: [
      {
        Effect: 'Allow',
        Action: ['ssm:GetParameter', 'ssm:GetParameters', 'ssm:GetParametersByPath', 'ssm:DescribeParameters'],
        Resource: ['arn:aws:ssm:*:*:parameter/apps/*/local/', 'arn:aws:ssm:*:*:parameter/apps/*/local/*'],
      },
      {
        Effect: 'Allow',
        Action: ['s3:GetObject', 's3:PutObject'],
        Resource: [pulumi.concat(buckets.uploads.arn, '/*')],
      },
      {
        Effect: 'Allow',
        Action: ['s3:GetObject', 's3:PutObject', 's3:GetObjectTagging', 's3:PutObjectTagging'],
        Resource: [pulumi.concat(buckets.usercontents.arn, '/*')],
      },
      {
        Effect: 'Allow',
        Action: ['s3:GetObject', 's3:PutObject'],
        Resource: [pulumi.concat(buckets.misc.arn, '/*')],
      },
      {
        Effect: 'Allow',
        Action: ['ses:SendEmail'],
        Resource: [emailIdentity.arn, configurationSet.arn],
        Condition: {
          StringEquals: {
            'ses:FromAddress': 'hello@typie.co',
          },
        },
      },
      {
        Effect: 'Allow',
        Action: ['ce:GetCostAndUsage'],
        Resource: '*',
      },
      {
        Effect: 'Allow',
        Action: [
          'iam:GetUser',
          'iam:ListAccessKeys',
          'iam:ListGroupsForUser',
          'iam:ChangePassword',
          'iam:CreateAccessKey',
          'iam:DeleteAccessKey',
          'iam:UpdateAccessKey',
          'iam:GetAccessKeyLastUsed',
          'iam:CreateVirtualMFADevice',
          'iam:DeleteVirtualMFADevice',
          'iam:EnableMFADevice',
          'iam:DeactivateMFADevice',
          'iam:ListMFADevices',
          'iam:ResyncMFADevice',
        ],
        Resource: 'arn:aws:iam::*:user/${aws:username}',
      },
    ],
  },
});

const githubActionsOidcProvider = new aws.iam.OpenIdConnectProvider('actions@github', {
  url: 'https://token.actions.githubusercontent.com',
  clientIdLists: ['sts.amazonaws.com'],
  thumbprintLists: ['ffffffffffffffffffffffffffffffffffffffff'],
});

const githubActionsRole = new aws.iam.Role('actions@github', {
  name: 'actions@github',
  assumeRolePolicy: {
    Version: '2012-10-17',
    Statement: [
      {
        Effect: 'Allow',
        Principal: { Federated: githubActionsOidcProvider.arn },
        Action: 'sts:AssumeRoleWithWebIdentity',
        Condition: {
          StringLike: {
            'token.actions.githubusercontent.com:sub': 'repo:penxle/*',
          },
          StringEquals: {
            'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com',
          },
        },
      },
    ],
  },
});

new aws.iam.RolePolicy('actions@github', {
  role: githubActionsRole.name,
  policy: {
    Version: '2012-10-17',
    Statement: [
      {
        Effect: 'Allow',
        Action: '*',
        Resource: '*',
      },
    ],
  },
});

const datadogRole = new aws.iam.Role('datadog@monitoring', {
  name: 'datadog@monitoring',
  assumeRolePolicy: {
    Version: '2012-10-17',
    Statement: [
      {
        Effect: 'Allow',
        Principal: { AWS: '417141415827' },
        Action: 'sts:AssumeRole',
        Condition: {
          StringEquals: {
            'sts:ExternalId': '91bd1ba307ba45f896a15a1bd3f462fd',
          },
        },
      },
    ],
  },
  managedPolicyArns: [aws.iam.ManagedPolicy.SecurityAudit],
});

// spell-checker:disable
new aws.iam.RolePolicy('datadog@monitoring', {
  role: datadogRole.name,
  policy: {
    Version: '2012-10-17',
    Statement: [
      {
        Action: [
          'access-analyzer:GetFinding',
          'access-analyzer:ListAnalyzers',
          'acm:ListCertificates',
          'airflow:ListEnvironments',
          'amplify:ListApps',
          'amplify:ListArtifacts',
          'amplify:ListBackendEnvironments',
          'amplify:ListBranches',
          'amplify:ListDomainAssociations',
          'amplify:ListJobs',
          'amplify:ListWebhooks',
          'apigateway:GET',
          'appstream:DescribeAppBlockBuilders',
          'appstream:DescribeAppBlocks',
          'appstream:DescribeApplications',
          'appstream:DescribeFleets',
          'appstream:DescribeImageBuilders',
          'appstream:DescribeImages',
          'appstream:DescribeStacks',
          'appsync:ListApis',
          'appsync:ListChannelNamespaces',
          'appsync:ListDataSources',
          'appsync:ListDomainNames',
          'appsync:ListFunctions',
          'appsync:ListGraphqlApis',
          'appsync:ListSourceApiAssociations',
          'aoss:BatchGetCollection',
          'aoss:ListCollections',
          'autoscaling:Describe*',
          'backup:List*',
          'batch:DescribeComputeEnvironments',
          'batch:DescribeJobDefinitions',
          'batch:DescribeJobQueues',
          'batch:DescribeSchedulingPolicies',
          'batch:ListSchedulingPolicies',
          'bcm-data-exports:GetExport',
          'bcm-data-exports:ListExports',
          'bedrock:GetAgent',
          'bedrock:GetAgentAlias',
          'bedrock:GetFlow',
          'bedrock:GetFlowAlias',
          'bedrock:GetGuardrail',
          'bedrock:GetImportedModel',
          'bedrock:GetInferenceProfile',
          'bedrock:GetMarketplaceModelEndpoint',
          'bedrock:ListAgentAliases',
          'bedrock:ListAgents',
          'bedrock:ListFlowAliases',
          'bedrock:ListFlows',
          'bedrock:ListGuardrails',
          'bedrock:ListImportedModels',
          'bedrock:ListInferenceProfiles',
          'bedrock:ListMarketplaceModelEndpoints',
          'bedrock:ListPromptRouters',
          'bedrock:ListProvisionedModelThroughputs',
          'budgets:ViewBudget',
          'cassandra:Select',
          'cloudfront:GetDistributionConfig',
          'cloudfront:ListDistributions',
          'cloudformation:ListStacks',
          'cloudtrail:DescribeTrails',
          'cloudtrail:GetTrailStatus',
          'cloudtrail:LookupEvents',
          'cloudwatch:Describe*',
          'cloudwatch:Get*',
          'cloudwatch:List*',
          'codeartifact:DescribeDomain',
          'codeartifact:DescribePackageGroup',
          'codeartifact:DescribeRepository',
          'codeartifact:ListDomains',
          'codeartifact:ListPackageGroups',
          'codeartifact:ListPackages',
          'codedeploy:BatchGet*',
          'codedeploy:List*',
          'codepipeline:ListWebhooks',
          'cur:DescribeReportDefinitions',
          'deadline:GetBudget',
          'deadline:GetLicenseEndpoint',
          'deadline:GetQueue',
          'deadline:ListBudgets',
          'deadline:ListFarms',
          'deadline:ListFleets',
          'deadline:ListLicenseEndpoints',
          'deadline:ListMonitors',
          'deadline:ListQueues',
          'deadline:ListWorkers',
          'directconnect:Describe*',
          'dms:ListDataProviders',
          'dms:ListInstanceProfiles',
          'dms:ListMigrationProjects',
          'dynamodb:Describe*',
          'dynamodb:List*',
          'ec2:Describe*',
          'ec2:GetAllowedImagesSettings',
          'ec2:GetEbsDefaultKmsKeyId',
          'ec2:GetEbsEncryptionByDefault',
          'ec2:GetImageBlockPublicAccessState',
          'ec2:GetInstanceMetadataDefaults',
          'ec2:GetSerialConsoleAccessStatus',
          'ec2:GetSnapshotBlockPublicAccessState',
          'ec2:GetTransitGatewayPrefixListReferences',
          'ec2:SearchTransitGatewayRoutes',
          'ecs:Describe*',
          'ecs:List*',
          'elasticache:Describe*',
          'elasticache:List*',
          'elasticfilesystem:DescribeAccessPoints',
          'elasticfilesystem:DescribeFileSystems',
          'elasticfilesystem:DescribeTags',
          'elasticloadbalancing:Describe*',
          'elasticmapreduce:Describe*',
          'elasticmapreduce:List*',
          'emr-containers:ListManagedEndpoints',
          'emr-containers:ListSecurityConfigurations',
          'emr-containers:ListVirtualClusters',
          'emr-serverless:ListApplications',
          'es:DescribeElasticsearchDomains',
          'es:ListDomainNames',
          'es:ListTags',
          'events:CreateEventBus',
          'fsx:DescribeBackups',
          'fsx:DescribeFileSystems',
          'fsx:ListTagsForResource',
          'glacier:GetVaultNotifications',
          'glue:ListRegistries',
          'grafana:DescribeWorkspace',
          'greengrass:GetComponent',
          'greengrass:GetConnectivityInfo',
          'greengrass:GetCoreDevice',
          'greengrass:GetDeployment',
          'greengrass:ListComponents',
          'greengrass:ListCoreDevices',
          'greengrass:ListDeployments',
          'guardduty:DescribePublishingDestination',
          'guardduty:GetAdministratorAccount',
          'guardduty:GetCoverageStatistics',
          'guardduty:GetDetector',
          'guardduty:GetFilter',
          'guardduty:GetIPSet',
          'guardduty:GetMalwareProtectionPlan',
          'guardduty:GetMalwareScanSettings',
          'guardduty:GetMasterAccount',
          'guardduty:GetThreatIntelSet',
          'guardduty:ListDetectors',
          'guardduty:ListIPSets',
          'guardduty:ListMalwareProtectionPlans',
          'guardduty:ListPublishingDestinations',
          'guardduty:ListThreatIntelSets',
          'health:DescribeAffectedEntities',
          'health:DescribeEventDetails',
          'health:DescribeEvents',
          'iam:GenerateCredentialReport',
          'iam:GetAccountSummary',
          'iam:ListGroups',
          'imagebuilder:GetContainerRecipe',
          'imagebuilder:GetDistributionConfiguration',
          'imagebuilder:GetImageRecipe',
          'imagebuilder:GetInfrastructureConfiguration',
          'imagebuilder:GetLifecyclePolicy',
          'imagebuilder:GetWorkflow',
          'imagebuilder:ListComponents',
          'imagebuilder:ListContainerRecipes',
          'imagebuilder:ListDistributionConfigurations',
          'imagebuilder:ListImagePipelines',
          'imagebuilder:ListImageRecipes',
          'imagebuilder:ListImages',
          'imagebuilder:ListInfrastructureConfigurations',
          'imagebuilder:ListLifecyclePolicies',
          'imagebuilder:ListWorkflows',
          'inspector2:ListCoverage',
          'kinesis:Describe*',
          'kinesis:List*',
          'lambda:GetPolicy',
          'lambda:List*',
          'lightsail:GetInstancePortStates',
          'logs:DeleteSubscriptionFilter',
          'logs:DescribeLogGroups',
          'logs:DescribeLogStreams',
          'logs:DescribeSubscriptionFilters',
          'logs:FilterLogEvents',
          'logs:PutSubscriptionFilter',
          'logs:TestMetricFilter',
          'm2:GetApplication',
          'm2:ListApplications',
          'm2:ListEnvironments',
          'macie2:GetAllowList',
          'macie2:GetCustomDataIdentifier',
          'macie2:ListAllowLists',
          'macie2:ListCustomDataIdentifiers',
          'macie2:ListMembers',
          'macie2:GetMacieSession',
          'managedblockchain:GetAccessor',
          'managedblockchain:GetMember',
          'managedblockchain:GetNetwork',
          'managedblockchain:GetNode',
          'managedblockchain:GetProposal',
          'managedblockchain:ListAccessors',
          'managedblockchain:ListInvitations',
          'managedblockchain:ListMembers',
          'managedblockchain:ListNodes',
          'managedblockchain:ListProposals',
          'memorydb:DescribeAcls',
          'memorydb:DescribeMultiRegionClusters',
          'memorydb:DescribeParameterGroups',
          'memorydb:DescribeReservedNodes',
          'memorydb:DescribeSnapshots',
          'memorydb:DescribeSubnetGroups',
          'memorydb:DescribeUsers',
          'mobiletargeting:GetApps',
          'mobiletargeting:GetCampaigns',
          'mobiletargeting:GetChannels',
          'mobiletargeting:GetEventStream',
          'mobiletargeting:GetRecommenderConfigurations',
          'mobiletargeting:GetSegments',
          'mobiletargeting:ListJourneys',
          'mobiletargeting:ListTemplates',
          'mq:DescribeBroker',
          'mq:DescribeConfigurationRevision',
          'mq:DescribeUser',
          'mq:ListBrokers',
          'mq:ListConfigurationRevisions',
          'mq:ListConfigurations',
          'oam:ListAttachedLinks',
          'oam:ListSinks',
          'organizations:Describe*',
          'organizations:List*',
          'organizations:ListAccounts',
          'organizations:ListRoots',
          'osis:GetPipeline',
          'osis:GetPipelineBlueprint',
          'osis:ListPipelineBlueprints',
          'osis:ListPipelines',
          'proton:GetComponent',
          'proton:GetDeployment',
          'proton:GetEnvironment',
          'proton:GetEnvironmentAccountConnection',
          'proton:GetEnvironmentTemplate',
          'proton:GetEnvironmentTemplateVersion',
          'proton:GetRepository',
          'proton:GetService',
          'proton:GetServiceInstance',
          'proton:GetServiceTemplate',
          'proton:GetServiceTemplateVersion',
          'proton:ListComponents',
          'proton:ListDeployments',
          'proton:ListEnvironmentAccountConnections',
          'proton:ListEnvironmentTemplateVersions',
          'proton:ListEnvironmentTemplates',
          'proton:ListEnvironments',
          'proton:ListRepositories',
          'proton:ListServiceInstances',
          'proton:ListServiceTemplateVersions',
          'proton:ListServiceTemplates',
          'proton:ListServices',
          'qldb:ListJournalKinesisStreamsForLedger',
          'rds:Describe*',
          'rds:List*',
          'redshift:DescribeClusters',
          'redshift:DescribeLoggingStatus',
          'redshift-serverless:ListEndpointAccess',
          'redshift-serverless:ListManagedWorkgroups',
          'redshift-serverless:ListNamespaces',
          'redshift-serverless:ListRecoveryPoints',
          'redshift-serverless:ListSnapshots',
          'route53:List*',
          's3:GetBucketLocation',
          's3:GetBucketLogging',
          's3:GetBucketNotification',
          's3:GetBucketTagging',
          's3:ListAccessGrants',
          's3:ListAllMyBuckets',
          's3:PutBucketNotification',
          's3express:GetBucketPolicy',
          's3express:GetEncryptionConfiguration',
          's3express:ListAllMyDirectoryBuckets',
          's3tables:GetTableBucketMaintenanceConfiguration',
          's3tables:ListTableBuckets',
          's3tables:ListTables',
          'savingsplans:DescribeSavingsPlanRates',
          'savingsplans:DescribeSavingsPlans',
          'secretsmanager:GetResourcePolicy',
          'ses:Get*',
          'ses:ListAddonInstances',
          'ses:ListAddonSubscriptions',
          'ses:ListAddressLists',
          'ses:ListArchives',
          'ses:ListContactLists',
          'ses:ListCustomVerificationEmailTemplates',
          'ses:ListMultiRegionEndpoints',
          'ses:ListIngressPoints',
          'ses:ListRelays',
          'ses:ListRuleSets',
          'ses:ListTemplates',
          'ses:ListTrafficPolicies',
          'sms-voice:DescribeConfigurationSets',
          'sms-voice:DescribeOptOutLists',
          'sms-voice:DescribePhoneNumbers',
          'sms-voice:DescribePools',
          'sms-voice:DescribeProtectConfigurations',
          'sms-voice:DescribeRegistrationAttachments',
          'sms-voice:DescribeRegistrations',
          'sms-voice:DescribeSenderIds',
          'sms-voice:DescribeVerifiedDestinationNumbers',
          'sns:GetSubscriptionAttributes',
          'sns:List*',
          'sns:Publish',
          'social-messaging:ListLinkedWhatsAppBusinessAccounts',
          'sqs:ListQueues',
          'ssm:DescribeDocument',
          'ssm:DescribeInstanceInformation',
          'ssm:GetServiceSetting',
          'ssm:ListDocuments',
          'states:DescribeStateMachine',
          'states:ListStateMachines',
          'support:DescribeTrustedAdvisor*',
          'support:RefreshTrustedAdvisorCheck',
          'tag:GetResources',
          'tag:GetTagKeys',
          'tag:GetTagValues',
          'timestream:DescribeEndpoints',
          'timestream:ListTables',
          'waf-regional:GetRule',
          'waf-regional:GetRuleGroup',
          'waf-regional:ListRuleGroups',
          'waf-regional:ListRules',
          'waf:GetRule',
          'waf:GetRuleGroup',
          'waf:ListRuleGroups',
          'waf:ListRules',
          'wafv2:GetIPSet',
          'wafv2:GetLoggingConfiguration',
          'wafv2:GetRegexPatternSet',
          'wafv2:GetRuleGroup',
          'wafv2:ListLoggingConfigurations',
          'workmail:DescribeOrganization',
          'workmail:ListOrganizations',
          'xray:BatchGetTraces',
          'xray:GetTraceSummaries',
        ],
        Effect: 'Allow',
        Resource: '*',
      },
    ],
  },
});
// spell-checker:enable

export const roles = {
  actions: githubActionsRole,
};
