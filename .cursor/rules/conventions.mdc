---
description: 
globs: 
alwaysApply: true
---
# 코드 컨벤션

## 이름 지정 규칙

### 파일 및 디렉토리 이름

- 디렉토리 및 일반 파일: kebab-case 사용 (예: `user-profiles/`, `api-utils/`, `format-date.ts`, `use-auth.ts`)
- 컴포넌트 파일: PascalCase 사용 (예: `UserProfile.svelte`, `Button.svelte`)
- 테스트 파일: 원본 파일명 + `.test.ts` (예: `Button.test.ts`, `format-date.test.ts`)

### 변수 및 함수 이름

- 변수: camelCase 사용 (예: `userName`, `isLoggedIn`)
- 함수: camelCase 사용 (예: `getUserData()`, `formatPrice()`)
- 불리언 변수: is, has, can 등의 접두사 사용 (예: `isValid`, `hasPermission`)
- 상수: UPPER_SNAKE_CASE 사용 (예: `MAX_RETRY_COUNT`, `API_BASE_URL`)

### 클래스 및 타입 이름

- 클래스/인터페이스/타입/Enum: PascalCase 사용 (예: `UserProfile`, `AuthResponse`)
- 제네릭 타입 매개변수: 단일 대문자 또는 설명적인 PascalCase 사용 (예: `T`, `TItem`, `ResponseType`)

### 컴포넌트 및 이벤트 핸들러

- Svelte 컴포넌트: PascalCase 사용 (예: `UserCard`, `Button`)
- 이벤트 핸들러: handle 접두사 + 이벤트명 사용 (예: `handleClick`, `handleSubmit`)

### GraphQL 및 데이터베이스

- GraphQL 타입: PascalCase 사용 (예: `User`, `PostResponse`)
- GraphQL 필드/인수: camelCase 사용 (예: `userName`, `createdAt`)
- 데이터베이스 테이블: snake_case 사용 (예: `user_profiles`, `auth_logs`)
- 데이터베이스 칼럼: snake_case 사용 (예: `first_name`, `created_at`)
