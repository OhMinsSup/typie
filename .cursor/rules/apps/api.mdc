---
description: 
globs: apps/api/**
alwaysApply: false
---
# API 개발 규칙

## 기본 구조

- API 앱은 `apps/api` 디렉토리에 위치합니다.
- GraphQL API는 Yoga 서버와 Pothos 스키마 빌더를 사용하여 구현합니다.
- 데이터베이스 상호작용은 Drizzle ORM을 통해 처리합니다.

## GraphQL 개발 가이드라인

### 스키마 정의

- Pothos를 사용한 코드 우선(code-first) 접근 방식을 사용하세요.
- 타입과 필드 이름은 camelCase를 사용하세요.
- 타입 이름은 PascalCase를 사용하세요.
- 모든 필드와 인자에 명시적인 타입을 지정하세요.
- 널러블(nullable) 필드는 명확하게 표시하세요.
- GraphQL 스키마는 자동 생성된 `schema.graphql` 파일로 확인할 수 있습니다.

### 리졸버 구현

- 리졸버는 기능별로 모듈화하여 구성하세요.
- 복잡한 로직은 별도의 서비스 레이어로 분리하세요.
- 데이터 로딩 최적화를 위해 DataLoader 패턴을 사용하세요.
- N+1 문제를 방지하기 위해 관계 리졸빙에 주의하세요.
- 에러 처리는 GraphQL 에러 형식을 준수하세요.

## Drizzle ORM 가이드라인

### 스키마 정의

- 테이블과 칼럼 이름은 snake_case를 사용하세요.
- 외래 키 제약 조건을 명시적으로 정의하세요.
- 인덱스는 성능이 필요한 쿼리 패턴에 따라 추가하세요.

### 쿼리 작성

- 타입 안전성을 위해 Drizzle의 쿼리 빌더를 활용하세요.
- 복잡한 쿼리는 가독성을 위해 여러 단계로 나누세요.
- 트랜잭션을 적절히 사용하여 데이터 일관성을 유지하세요.
- 대량 데이터 처리 시 배치 처리와 스트리밍을 고려하세요.
