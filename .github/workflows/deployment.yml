name: Deployment

on:
  workflow_call:
    inputs:
      stack:
        required: true
        type: string
        description: The stack to deploy to.
      app:
        required: true
        type: string
        description: The app to deploy.
      version:
        required: true
        type: string
        description: The version of the image to deploy.

permissions:
  contents: read

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    environment: ${{ inputs.stack }}-${{ inputs.app }}

    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: penxle

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Checkout kube repository
        uses: actions/checkout@v4
        with:
          repository: penxle/kube
          token: ${{ steps.app-token.outputs.token }}

      - name: Update version
        run: |
          cat > apps/${{ inputs.app }}/${{ inputs.stack }}/version.yaml << EOF
          image:
            version: ${{ inputs.version }}
          EOF

      - name: Commit and push changes
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git add apps/${{ inputs.app }}/${{ inputs.stack }}/version.yaml
          git commit -m "Deploy ${{ inputs.app }} to ${{ inputs.stack }}: ${{ inputs.version }}"
          git push
